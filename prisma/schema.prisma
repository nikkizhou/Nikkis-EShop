datasource db {
  provider = "postgresql"
  url = env("NEXT_PUBLIC_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  address       String?
  email         String?   @unique
  phone         Int?  
  image         String?   
  cart          CartProductsOnUsers[] @relation("cart")
  hasBought     BoughtProductsOnUsers[] @relation("bought")
  reviews       Review []
  role          Role     @default(USER) 
  
  @@map("users")
}

model CartProductsOnUsers{
  product       Product @relation("cart", fields: [productId], references: [id])
  productId     Int
  quantity      Int
  user          User @relation("cart",fields: [userId], references: [id])
  userId        String
  assignedAt    DateTime @default(now())
  @@id([userId, productId])
}

model BoughtProductsOnUsers{
  product       Product @relation("bought", fields: [productId], references: [id])
  productId     Int
  user          User @relation("bought",fields: [userId], references: [id])
  userId        String
  assignedAt    DateTime @default(now())
  @@id([userId, productId])
}

enum Role {
  USER
  ADMIN
}

model Review {
  id        String  @id @default(cuid())
  rating    Int
  text      String
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  productId Int
  userId    String
}



model Product {
  id            Int   @id
  title         String?
  price         Float?
  description   String?   
  image         String?  
  category      String?     
  reviews       Review[]
  inCartOf      CartProductsOnUsers[] @relation("cart")
  boughtBy      BoughtProductsOnUsers[] @relation("bought")

  @@map("products")
}
